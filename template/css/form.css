.container {
    max-width: 1010px;
    width: 100%;
    margin: 0 auto;
    padding: 0 20px
}

.boby-active {
    overflow: hidden
}

.content {
    max-width: 1300px;
    width: 100%;
    margin: 0 auto
}


.btn__form {
    min-width: 120px;
    font-family: Roboto;
    font-size: 15px;
    line-height: 28px;
    font-weight: 700;
    letter-spacing: .01em;
    color: #FFFFFF;
    text-transform: uppercase;
    text-shadow: 1px 1px 1px rgba(0, 0, 0, .69);
    background-color: #36C2FF;
    border-radius: 3px
}

.btn__form:hover {
    text-shadow: 1px 1px 1px rgba(0, 0, 0, .69);
    color: #36C2FF;
    background-color: transparent;
    -webkit-box-shadow: 0 0 5px -2px #36C2FF;
    box-shadow: 0 0 5px -2px #36C2FF
}

.form-block {
    padding: 30px 0
}

.form-block__title {
    font-family: Roboto;
    font-size: 24px;
    line-height: 28px;
    font-weight: 700;
    text-transform: uppercase;
    color: #43537B;
    text-align: center
}

.form-block__info {
    font-family: Roboto;
    font-size: 13.9px;
    line-height: 27px;
    font-weight: 500;
    color: #64759F;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    margin: 0 auto;
    width: 300px
}

.form-block__message {
    text-align: center
}

.errors {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: start;
    -ms-flex-align: start;
    align-items: flex-start;
    max-width: 280px;
    margin: 20px auto
}

.errors__item {
    margin-bottom: 10px;
    opacity: .45;
    color: #C92861
}

.form {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center
}

.form__label {
    font-family: Roboto;
    font-size: 15px;
    line-height: 28px;
    font-weight: 700;
    letter-spacing: .01em;
    color: #36C2FF;
    text-transform: uppercase;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column
}

.form__input-elem, .form__textarea {
    width: 200px;
    font-family: Roboto;
    font-size: 18px;
    line-height: 27px;
    font-weight: 500;
    color: #43537B;
    border: none;
    border-bottom: 1px solid #555F76;
    outline: 0;
    margin-bottom: 20px
}

.form__input-elem::-webkit-input-placeholder, .form__textarea::-webkit-input-placeholder {
    opacity: .45;
    color: #43537B;
    font-size: 15px;
    position: relative;
    right: 0;
    -webkit-transition: right .5s ease-in;
    transition: right .5s ease-in
}

.form__input-elem::-moz-placeholder, .form__textarea::-moz-placeholder {
    opacity: .45;
    color: #43537B;
    font-size: 15px;
    position: relative;
    right: 0;
    -moz-transition: right .5s ease-in;
    transition: right .5s ease-in
}

.form__input-elem:-ms-input-placeholder, .form__textarea:-ms-input-placeholder {
    opacity: .45;
    color: #43537B;
    font-size: 15px;
    position: relative;
    right: 0;
    -ms-transition: right .5s ease-in;
    transition: right .5s ease-in
}

.form__input-elem::-ms-input-placeholder, .form__textarea::-ms-input-placeholder {
    opacity: .45;
    color: #43537B;
    font-size: 15px;
    position: relative;
    right: 0;
    -ms-transition: right .5s ease-in;
    transition: right .5s ease-in
}

.form__input-elem::placeholder, .form__textarea::placeholder {
    opacity: .45;
    color: #43537B;
    font-size: 15px;
    position: relative;
    right: 0;
    -webkit-transition: right .5s ease-in;
    -o-transition: right .5s ease-in;
    transition: right .5s ease-in
}

.form__input-elem:focus::-webkit-input-placeholder, .form__textarea:focus::-webkit-input-placeholder {
    position: relative;
    right: -100%;
    -webkit-transition: right .5s ease-in;
    transition: right .5s ease-in
}

.form__input-elem:focus::-moz-placeholder, .form__textarea:focus::-moz-placeholder {
    position: relative;
    right: -100%;
    -moz-transition: right .5s ease-in;
    transition: right .5s ease-in
}

.form__input-elem:focus:-ms-input-placeholder, .form__textarea:focus:-ms-input-placeholder {
    position: relative;
    right: -100%;
    -ms-transition: right .5s ease-in;
    transition: right .5s ease-in
}

.form__input-elem:focus::-ms-input-placeholder, .form__textarea:focus::-ms-input-placeholder {
    position: relative;
    right: -100%;
    -ms-transition: right .5s ease-in;
    transition: right .5s ease-in
}

.form__input-elem:focus::placeholder, .form__textarea:focus::placeholder {
    position: relative;
    right: -100%;
    -webkit-transition: right .5s ease-in;
    -o-transition: right .5s ease-in;
    transition: right .5s ease-in
}

@media screen and (min-width: 768px) {
    .btn__form-subscribe {
        width: 136px;
        font-size: 12px;
        padding: 14px 35px
    }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
